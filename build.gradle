plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.github.dhiraj072'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

// Configures the classpath and the source and resource directories
// of the integrationTest task.
sourceSets {
	//Declaring this source set creates compile time and runtime configurations for it.
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integration-test/java')
		}
		resources.srcDir file('src/integration-test/resources')
	}
}

// Configure source directory and uses the correct classpath.
task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	// Ensure that integration tests are run every time
	outputs.upToDateWhen { false }
}

//Ensure that the check task fails the build if there are failing integration tests.
check.dependsOn integrationTest
//Ensure that our unit tests are run before our integration tests
integrationTest.mustRunAfter test

configurations {
	integrationTestCompile.extendsFrom testImplementation
	integrationTestRuntime.extendsFrom runtimeOnly
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

tasks.withType(Test) {
	reports.html.setDestination(file("${reporting.baseDir}/${name}"))
	environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev"
	// Enable JUnit 5
	useJUnitPlatform()
	testLogging {
		events 'PASSED', 'FAILED', 'SKIPPED'
	}
	afterSuite { desc, result ->
		if (!desc.parent) {
			println "\nTest result: ${result.resultType}"
			println "Test summary: ${result.testCount} tests, " +
					"${result.successfulTestCount} succeeded, " +
					"${result.failedTestCount} failed, " +
					"${result.skippedTestCount} skipped"
		}
	}
}

jacocoTestReport {
	executionData test, integrationTest
	reports {
		xml.enabled true
		xml.destination file('build/reports/jacoco/report.xml')
		html.enabled true
		html.destination file('build/reports/jacoco/report.html')
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'com.icegreen:greenmail:1.5.0'
	runtimeOnly 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation('io.rest-assured:rest-assured:3.3.0')
	testImplementation('io.rest-assured:spring-mock-mvc:3.3.0')
}